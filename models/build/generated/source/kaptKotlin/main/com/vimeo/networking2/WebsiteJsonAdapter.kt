// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class WebsiteJsonAdapter(moshi: Moshi) : JsonAdapter<Website>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("description", "link", "users_with_access")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "description")

    override fun toString(): String = "GeneratedJsonAdapter(Website)"

    override fun fromJson(reader: JsonReader): Website {
        var description: String? = null
        var descriptionSet: Boolean = false
        var link: String? = null
        var linkSet: Boolean = false
        var name: String? = null
        var nameSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    description = nullableStringAdapter.fromJson(reader)
                    descriptionSet = true
                }
                1 ->  {
                    link = nullableStringAdapter.fromJson(reader)
                    linkSet = true
                }
                2 ->  {
                    name = nullableStringAdapter.fromJson(reader)
                    nameSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Website()
        result = result.copy(
                description = if (descriptionSet) description else result.description,
                link = if (linkSet) link else result.link,
                name = if (nameSet) name else result.name)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Website?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("description")
        nullableStringAdapter.toJson(writer, value.description)
        writer.name("link")
        nullableStringAdapter.toJson(writer, value.link)
        writer.name("users_with_access")
        nullableStringAdapter.toJson(writer, value.name)
        writer.endObject()
    }
}

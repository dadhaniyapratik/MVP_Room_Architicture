// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class UserConnectionsJsonAdapter(moshi: Moshi) : JsonAdapter<UserConnections>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("albums", "appearances", "block", "categories", "channels", "feed", "folders", "followers", "following", "groups", "likes", "moderated_channels", "notifications", "pictures", "portfolios", "recommended_channels", "recommended_users", "shared", "team_members", "videos", "watchlater")

    private val nullableConnectionAdapter: JsonAdapter<Connection?> =
            moshi.adapter<Connection?>(Connection::class.java, kotlin.collections.emptySet(), "albums")

    private val nullableNotificationConnectionAdapter: JsonAdapter<NotificationConnection?> =
            moshi.adapter<NotificationConnection?>(NotificationConnection::class.java, kotlin.collections.emptySet(), "notifications")

    override fun toString(): String = "GeneratedJsonAdapter(UserConnections)"

    override fun fromJson(reader: JsonReader): UserConnections {
        var albums: Connection? = null
        var albumsSet: Boolean = false
        var appearances: Connection? = null
        var appearancesSet: Boolean = false
        var block: Connection? = null
        var blockSet: Boolean = false
        var categories: Connection? = null
        var categoriesSet: Boolean = false
        var channels: Connection? = null
        var channelsSet: Boolean = false
        var feed: Connection? = null
        var feedSet: Boolean = false
        var folders: Connection? = null
        var foldersSet: Boolean = false
        var followers: Connection? = null
        var followersSet: Boolean = false
        var following: Connection? = null
        var followingSet: Boolean = false
        var groups: Connection? = null
        var groupsSet: Boolean = false
        var likes: Connection? = null
        var likesSet: Boolean = false
        var moderatedChannels: Connection? = null
        var moderatedChannelsSet: Boolean = false
        var notifications: NotificationConnection? = null
        var notificationsSet: Boolean = false
        var pictures: Connection? = null
        var picturesSet: Boolean = false
        var portfolios: Connection? = null
        var portfoliosSet: Boolean = false
        var recommendedChannels: Connection? = null
        var recommendedChannelsSet: Boolean = false
        var recommendedUsers: Connection? = null
        var recommendedUsersSet: Boolean = false
        var shared: Connection? = null
        var sharedSet: Boolean = false
        var teamMembers: Connection? = null
        var teamMembersSet: Boolean = false
        var videos: Connection? = null
        var videosSet: Boolean = false
        var watchLater: Connection? = null
        var watchLaterSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    albums = nullableConnectionAdapter.fromJson(reader)
                    albumsSet = true
                }
                1 ->  {
                    appearances = nullableConnectionAdapter.fromJson(reader)
                    appearancesSet = true
                }
                2 ->  {
                    block = nullableConnectionAdapter.fromJson(reader)
                    blockSet = true
                }
                3 ->  {
                    categories = nullableConnectionAdapter.fromJson(reader)
                    categoriesSet = true
                }
                4 ->  {
                    channels = nullableConnectionAdapter.fromJson(reader)
                    channelsSet = true
                }
                5 ->  {
                    feed = nullableConnectionAdapter.fromJson(reader)
                    feedSet = true
                }
                6 ->  {
                    folders = nullableConnectionAdapter.fromJson(reader)
                    foldersSet = true
                }
                7 ->  {
                    followers = nullableConnectionAdapter.fromJson(reader)
                    followersSet = true
                }
                8 ->  {
                    following = nullableConnectionAdapter.fromJson(reader)
                    followingSet = true
                }
                9 ->  {
                    groups = nullableConnectionAdapter.fromJson(reader)
                    groupsSet = true
                }
                10 ->  {
                    likes = nullableConnectionAdapter.fromJson(reader)
                    likesSet = true
                }
                11 ->  {
                    moderatedChannels = nullableConnectionAdapter.fromJson(reader)
                    moderatedChannelsSet = true
                }
                12 ->  {
                    notifications = nullableNotificationConnectionAdapter.fromJson(reader)
                    notificationsSet = true
                }
                13 ->  {
                    pictures = nullableConnectionAdapter.fromJson(reader)
                    picturesSet = true
                }
                14 ->  {
                    portfolios = nullableConnectionAdapter.fromJson(reader)
                    portfoliosSet = true
                }
                15 ->  {
                    recommendedChannels = nullableConnectionAdapter.fromJson(reader)
                    recommendedChannelsSet = true
                }
                16 ->  {
                    recommendedUsers = nullableConnectionAdapter.fromJson(reader)
                    recommendedUsersSet = true
                }
                17 ->  {
                    shared = nullableConnectionAdapter.fromJson(reader)
                    sharedSet = true
                }
                18 ->  {
                    teamMembers = nullableConnectionAdapter.fromJson(reader)
                    teamMembersSet = true
                }
                19 ->  {
                    videos = nullableConnectionAdapter.fromJson(reader)
                    videosSet = true
                }
                20 ->  {
                    watchLater = nullableConnectionAdapter.fromJson(reader)
                    watchLaterSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = UserConnections()
        result = result.copy(
                albums = if (albumsSet) albums else result.albums,
                appearances = if (appearancesSet) appearances else result.appearances,
                block = if (blockSet) block else result.block,
                categories = if (categoriesSet) categories else result.categories,
                channels = if (channelsSet) channels else result.channels,
                feed = if (feedSet) feed else result.feed,
                folders = if (foldersSet) folders else result.folders,
                followers = if (followersSet) followers else result.followers,
                following = if (followingSet) following else result.following,
                groups = if (groupsSet) groups else result.groups,
                likes = if (likesSet) likes else result.likes,
                moderatedChannels = if (moderatedChannelsSet) moderatedChannels else result.moderatedChannels,
                notifications = if (notificationsSet) notifications else result.notifications,
                pictures = if (picturesSet) pictures else result.pictures,
                portfolios = if (portfoliosSet) portfolios else result.portfolios,
                recommendedChannels = if (recommendedChannelsSet) recommendedChannels else result.recommendedChannels,
                recommendedUsers = if (recommendedUsersSet) recommendedUsers else result.recommendedUsers,
                shared = if (sharedSet) shared else result.shared,
                teamMembers = if (teamMembersSet) teamMembers else result.teamMembers,
                videos = if (videosSet) videos else result.videos,
                watchLater = if (watchLaterSet) watchLater else result.watchLater)
        return result
    }

    override fun toJson(writer: JsonWriter, value: UserConnections?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("albums")
        nullableConnectionAdapter.toJson(writer, value.albums)
        writer.name("appearances")
        nullableConnectionAdapter.toJson(writer, value.appearances)
        writer.name("block")
        nullableConnectionAdapter.toJson(writer, value.block)
        writer.name("categories")
        nullableConnectionAdapter.toJson(writer, value.categories)
        writer.name("channels")
        nullableConnectionAdapter.toJson(writer, value.channels)
        writer.name("feed")
        nullableConnectionAdapter.toJson(writer, value.feed)
        writer.name("folders")
        nullableConnectionAdapter.toJson(writer, value.folders)
        writer.name("followers")
        nullableConnectionAdapter.toJson(writer, value.followers)
        writer.name("following")
        nullableConnectionAdapter.toJson(writer, value.following)
        writer.name("groups")
        nullableConnectionAdapter.toJson(writer, value.groups)
        writer.name("likes")
        nullableConnectionAdapter.toJson(writer, value.likes)
        writer.name("moderated_channels")
        nullableConnectionAdapter.toJson(writer, value.moderatedChannels)
        writer.name("notifications")
        nullableNotificationConnectionAdapter.toJson(writer, value.notifications)
        writer.name("pictures")
        nullableConnectionAdapter.toJson(writer, value.pictures)
        writer.name("portfolios")
        nullableConnectionAdapter.toJson(writer, value.portfolios)
        writer.name("recommended_channels")
        nullableConnectionAdapter.toJson(writer, value.recommendedChannels)
        writer.name("recommended_users")
        nullableConnectionAdapter.toJson(writer, value.recommendedUsers)
        writer.name("shared")
        nullableConnectionAdapter.toJson(writer, value.shared)
        writer.name("team_members")
        nullableConnectionAdapter.toJson(writer, value.teamMembers)
        writer.name("videos")
        nullableConnectionAdapter.toJson(writer, value.videos)
        writer.name("watchlater")
        nullableConnectionAdapter.toJson(writer, value.watchLater)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class PagingJsonAdapter(moshi: Moshi) : JsonAdapter<Paging>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("next", "previous", "first", "last")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "next")

    override fun toString(): String = "GeneratedJsonAdapter(Paging)"

    override fun fromJson(reader: JsonReader): Paging {
        var next: String? = null
        var nextSet: Boolean = false
        var previous: String? = null
        var previousSet: Boolean = false
        var first: String? = null
        var firstSet: Boolean = false
        var last: String? = null
        var lastSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    next = nullableStringAdapter.fromJson(reader)
                    nextSet = true
                }
                1 ->  {
                    previous = nullableStringAdapter.fromJson(reader)
                    previousSet = true
                }
                2 ->  {
                    first = nullableStringAdapter.fromJson(reader)
                    firstSet = true
                }
                3 ->  {
                    last = nullableStringAdapter.fromJson(reader)
                    lastSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Paging()
        result = result.copy(
                next = if (nextSet) next else result.next,
                previous = if (previousSet) previous else result.previous,
                first = if (firstSet) first else result.first,
                last = if (lastSet) last else result.last)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Paging?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("next")
        nullableStringAdapter.toJson(writer, value.next)
        writer.name("previous")
        nullableStringAdapter.toJson(writer, value.previous)
        writer.name("first")
        nullableStringAdapter.toJson(writer, value.first)
        writer.name("last")
        nullableStringAdapter.toJson(writer, value.last)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.String

class NotificationJsonAdapter(moshi: Moshi) : JsonAdapter<Notification>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("clip", "comment", "created_time", "credit", "new", "seen", "type", "uri", "user")

    private val nullableVideoAdapter: JsonAdapter<Video?> =
            moshi.adapter<Video?>(Video::class.java, kotlin.collections.emptySet(), "clip")

    private val nullableCommentAdapter: JsonAdapter<Comment?> =
            moshi.adapter<Comment?>(Comment::class.java, kotlin.collections.emptySet(), "comment")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "createdTime")

    private val nullableCreditAdapter: JsonAdapter<Credit?> =
            moshi.adapter<Credit?>(Credit::class.java, kotlin.collections.emptySet(), "credit")

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter<Boolean?>(Boolean::class.javaObjectType, kotlin.collections.emptySet(), "new")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "rawType")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(Notification)"

    override fun fromJson(reader: JsonReader): Notification {
        var clip: Video? = null
        var clipSet: Boolean = false
        var comment: Comment? = null
        var commentSet: Boolean = false
        var createdTime: Date? = null
        var createdTimeSet: Boolean = false
        var credit: Credit? = null
        var creditSet: Boolean = false
        var new: Boolean? = null
        var newSet: Boolean = false
        var seen: Boolean? = null
        var seenSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        var uri: String? = null
        var uriSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    clip = nullableVideoAdapter.fromJson(reader)
                    clipSet = true
                }
                1 ->  {
                    comment = nullableCommentAdapter.fromJson(reader)
                    commentSet = true
                }
                2 ->  {
                    createdTime = nullableDateAdapter.fromJson(reader)
                    createdTimeSet = true
                }
                3 ->  {
                    credit = nullableCreditAdapter.fromJson(reader)
                    creditSet = true
                }
                4 ->  {
                    new = nullableBooleanAdapter.fromJson(reader)
                    newSet = true
                }
                5 ->  {
                    seen = nullableBooleanAdapter.fromJson(reader)
                    seenSet = true
                }
                6 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                7 ->  {
                    uri = nullableStringAdapter.fromJson(reader)
                    uriSet = true
                }
                8 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Notification()
        result = result.copy(
                clip = if (clipSet) clip else result.clip,
                comment = if (commentSet) comment else result.comment,
                createdTime = if (createdTimeSet) createdTime else result.createdTime,
                credit = if (creditSet) credit else result.credit,
                new = if (newSet) new else result.new,
                seen = if (seenSet) seen else result.seen,
                rawType = if (rawTypeSet) rawType else result.rawType,
                uri = if (uriSet) uri else result.uri,
                user = if (userSet) user else result.user)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Notification?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("clip")
        nullableVideoAdapter.toJson(writer, value.clip)
        writer.name("comment")
        nullableCommentAdapter.toJson(writer, value.comment)
        writer.name("created_time")
        nullableDateAdapter.toJson(writer, value.createdTime)
        writer.name("credit")
        nullableCreditAdapter.toJson(writer, value.credit)
        writer.name("new")
        nullableBooleanAdapter.toJson(writer, value.new)
        writer.name("seen")
        nullableBooleanAdapter.toJson(writer, value.seen)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.name("uri")
        nullableStringAdapter.toJson(writer, value.uri)
        writer.name("user")
        nullableUserAdapter.toJson(writer, value.user)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.List

class VideoJsonAdapter(moshi: Moshi) : JsonAdapter<Video>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("badge", "categories", "content_rating", "context", "created_time", "description", "duration", "embed", "height", "language", "last_user_action_event_date", "license", "link", "live", "metadata", "modified_time", "name", "password", "pictures", "play", "privacy", "release_time", "resource_key", "review_page", "file_transfer", "spatial", "stats", "status", "tags", "transcode", "upload", "uri", "user", "width")

    private val nullableVideoBadgeAdapter: JsonAdapter<VideoBadge?> =
            moshi.adapter<VideoBadge?>(VideoBadge::class.java, kotlin.collections.emptySet(), "badge")

    private val nullableListOfCategoryAdapter: JsonAdapter<List<Category>?> =
            moshi.adapter<List<Category>?>(Types.newParameterizedType(List::class.java, Category::class.java), kotlin.collections.emptySet(), "categories")

    private val nullableListOfStringAdapter: JsonAdapter<List<String>?> =
            moshi.adapter<List<String>?>(Types.newParameterizedType(List::class.java, String::class.java), kotlin.collections.emptySet(), "contentRating")

    private val nullableVideoContextAdapter: JsonAdapter<VideoContext?> =
            moshi.adapter<VideoContext?>(VideoContext::class.java, kotlin.collections.emptySet(), "context")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "createdTime")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "description")

    private val nullableIntAdapter: JsonAdapter<Int?> =
            moshi.adapter<Int?>(Int::class.javaObjectType, kotlin.collections.emptySet(), "duration")

    private val nullableVideoEmbedAdapter: JsonAdapter<VideoEmbed?> =
            moshi.adapter<VideoEmbed?>(VideoEmbed::class.java, kotlin.collections.emptySet(), "embed")

    private val nullableLiveAdapter: JsonAdapter<Live?> =
            moshi.adapter<Live?>(Live::class.java, kotlin.collections.emptySet(), "live")

    private val nullableMetadataOfVideoConnectionsVideoInteractionsAdapter: JsonAdapter<Metadata<VideoConnections, VideoInteractions>?> =
            moshi.adapter<Metadata<VideoConnections, VideoInteractions>?>(Types.newParameterizedType(Metadata::class.java, VideoConnections::class.java, VideoInteractions::class.java), kotlin.collections.emptySet(), "metadata")

    private val nullablePictureCollectionAdapter: JsonAdapter<PictureCollection?> =
            moshi.adapter<PictureCollection?>(PictureCollection::class.java, kotlin.collections.emptySet(), "pictures")

    private val nullablePlayAdapter: JsonAdapter<Play?> =
            moshi.adapter<Play?>(Play::class.java, kotlin.collections.emptySet(), "play")

    private val nullablePrivacyAdapter: JsonAdapter<Privacy?> =
            moshi.adapter<Privacy?>(Privacy::class.java, kotlin.collections.emptySet(), "privacy")

    private val nullableReviewPageAdapter: JsonAdapter<ReviewPage?> =
            moshi.adapter<ReviewPage?>(ReviewPage::class.java, kotlin.collections.emptySet(), "reviewPage")

    private val nullableFileTransferPageAdapter: JsonAdapter<FileTransferPage?> =
            moshi.adapter<FileTransferPage?>(FileTransferPage::class.java, kotlin.collections.emptySet(), "fileTransferPage")

    private val nullableSpatialAdapter: JsonAdapter<Spatial?> =
            moshi.adapter<Spatial?>(Spatial::class.java, kotlin.collections.emptySet(), "spatial")

    private val nullableVideoStatsAdapter: JsonAdapter<VideoStats?> =
            moshi.adapter<VideoStats?>(VideoStats::class.java, kotlin.collections.emptySet(), "stats")

    private val nullableListOfTagAdapter: JsonAdapter<List<Tag>?> =
            moshi.adapter<List<Tag>?>(Types.newParameterizedType(List::class.java, Tag::class.java), kotlin.collections.emptySet(), "tags")

    private val nullableTranscodeAdapter: JsonAdapter<Transcode?> =
            moshi.adapter<Transcode?>(Transcode::class.java, kotlin.collections.emptySet(), "transcode")

    private val nullableUploadAdapter: JsonAdapter<Upload?> =
            moshi.adapter<Upload?>(Upload::class.java, kotlin.collections.emptySet(), "upload")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(Video)"

    override fun fromJson(reader: JsonReader): Video {
        var badge: VideoBadge? = null
        var badgeSet: Boolean = false
        var categories: List<Category>? = null
        var categoriesSet: Boolean = false
        var contentRating: List<String>? = null
        var contentRatingSet: Boolean = false
        var context: VideoContext? = null
        var contextSet: Boolean = false
        var createdTime: Date? = null
        var createdTimeSet: Boolean = false
        var description: String? = null
        var descriptionSet: Boolean = false
        var duration: Int? = null
        var durationSet: Boolean = false
        var embed: VideoEmbed? = null
        var embedSet: Boolean = false
        var height: Int? = null
        var heightSet: Boolean = false
        var language: String? = null
        var languageSet: Boolean = false
        var lastUserActionEventDate: Date? = null
        var lastUserActionEventDateSet: Boolean = false
        var license: String? = null
        var licenseSet: Boolean = false
        var link: String? = null
        var linkSet: Boolean = false
        var live: Live? = null
        var liveSet: Boolean = false
        var metadata: Metadata<VideoConnections, VideoInteractions>? = null
        var metadataSet: Boolean = false
        var modifiedTime: Date? = null
        var modifiedTimeSet: Boolean = false
        var name: String? = null
        var nameSet: Boolean = false
        var password: String? = null
        var passwordSet: Boolean = false
        var pictures: PictureCollection? = null
        var picturesSet: Boolean = false
        var play: Play? = null
        var playSet: Boolean = false
        var privacy: Privacy? = null
        var privacySet: Boolean = false
        var releaseTime: Date? = null
        var releaseTimeSet: Boolean = false
        var resourceKey: String? = null
        var resourceKeySet: Boolean = false
        var reviewPage: ReviewPage? = null
        var reviewPageSet: Boolean = false
        var fileTransferPage: FileTransferPage? = null
        var fileTransferPageSet: Boolean = false
        var spatial: Spatial? = null
        var spatialSet: Boolean = false
        var stats: VideoStats? = null
        var statsSet: Boolean = false
        var status: String? = null
        var statusSet: Boolean = false
        var tags: List<Tag>? = null
        var tagsSet: Boolean = false
        var transcode: Transcode? = null
        var transcodeSet: Boolean = false
        var upload: Upload? = null
        var uploadSet: Boolean = false
        var uri: String? = null
        var uriSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        var width: Int? = null
        var widthSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    badge = nullableVideoBadgeAdapter.fromJson(reader)
                    badgeSet = true
                }
                1 ->  {
                    categories = nullableListOfCategoryAdapter.fromJson(reader)
                    categoriesSet = true
                }
                2 ->  {
                    contentRating = nullableListOfStringAdapter.fromJson(reader)
                    contentRatingSet = true
                }
                3 ->  {
                    context = nullableVideoContextAdapter.fromJson(reader)
                    contextSet = true
                }
                4 ->  {
                    createdTime = nullableDateAdapter.fromJson(reader)
                    createdTimeSet = true
                }
                5 ->  {
                    description = nullableStringAdapter.fromJson(reader)
                    descriptionSet = true
                }
                6 ->  {
                    duration = nullableIntAdapter.fromJson(reader)
                    durationSet = true
                }
                7 ->  {
                    embed = nullableVideoEmbedAdapter.fromJson(reader)
                    embedSet = true
                }
                8 ->  {
                    height = nullableIntAdapter.fromJson(reader)
                    heightSet = true
                }
                9 ->  {
                    language = nullableStringAdapter.fromJson(reader)
                    languageSet = true
                }
                10 ->  {
                    lastUserActionEventDate = nullableDateAdapter.fromJson(reader)
                    lastUserActionEventDateSet = true
                }
                11 ->  {
                    license = nullableStringAdapter.fromJson(reader)
                    licenseSet = true
                }
                12 ->  {
                    link = nullableStringAdapter.fromJson(reader)
                    linkSet = true
                }
                13 ->  {
                    live = nullableLiveAdapter.fromJson(reader)
                    liveSet = true
                }
                14 ->  {
                    metadata = nullableMetadataOfVideoConnectionsVideoInteractionsAdapter.fromJson(reader)
                    metadataSet = true
                }
                15 ->  {
                    modifiedTime = nullableDateAdapter.fromJson(reader)
                    modifiedTimeSet = true
                }
                16 ->  {
                    name = nullableStringAdapter.fromJson(reader)
                    nameSet = true
                }
                17 ->  {
                    password = nullableStringAdapter.fromJson(reader)
                    passwordSet = true
                }
                18 ->  {
                    pictures = nullablePictureCollectionAdapter.fromJson(reader)
                    picturesSet = true
                }
                19 ->  {
                    play = nullablePlayAdapter.fromJson(reader)
                    playSet = true
                }
                20 ->  {
                    privacy = nullablePrivacyAdapter.fromJson(reader)
                    privacySet = true
                }
                21 ->  {
                    releaseTime = nullableDateAdapter.fromJson(reader)
                    releaseTimeSet = true
                }
                22 ->  {
                    resourceKey = nullableStringAdapter.fromJson(reader)
                    resourceKeySet = true
                }
                23 ->  {
                    reviewPage = nullableReviewPageAdapter.fromJson(reader)
                    reviewPageSet = true
                }
                24 ->  {
                    fileTransferPage = nullableFileTransferPageAdapter.fromJson(reader)
                    fileTransferPageSet = true
                }
                25 ->  {
                    spatial = nullableSpatialAdapter.fromJson(reader)
                    spatialSet = true
                }
                26 ->  {
                    stats = nullableVideoStatsAdapter.fromJson(reader)
                    statsSet = true
                }
                27 ->  {
                    status = nullableStringAdapter.fromJson(reader)
                    statusSet = true
                }
                28 ->  {
                    tags = nullableListOfTagAdapter.fromJson(reader)
                    tagsSet = true
                }
                29 ->  {
                    transcode = nullableTranscodeAdapter.fromJson(reader)
                    transcodeSet = true
                }
                30 ->  {
                    upload = nullableUploadAdapter.fromJson(reader)
                    uploadSet = true
                }
                31 ->  {
                    uri = nullableStringAdapter.fromJson(reader)
                    uriSet = true
                }
                32 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                33 ->  {
                    width = nullableIntAdapter.fromJson(reader)
                    widthSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Video()
        result = result.copy(
                badge = if (badgeSet) badge else result.badge,
                categories = if (categoriesSet) categories else result.categories,
                contentRating = if (contentRatingSet) contentRating else result.contentRating,
                context = if (contextSet) context else result.context,
                createdTime = if (createdTimeSet) createdTime else result.createdTime,
                description = if (descriptionSet) description else result.description,
                duration = if (durationSet) duration else result.duration,
                embed = if (embedSet) embed else result.embed,
                height = if (heightSet) height else result.height,
                language = if (languageSet) language else result.language,
                lastUserActionEventDate = if (lastUserActionEventDateSet) lastUserActionEventDate else result.lastUserActionEventDate,
                license = if (licenseSet) license else result.license,
                link = if (linkSet) link else result.link,
                live = if (liveSet) live else result.live,
                metadata = if (metadataSet) metadata else result.metadata,
                modifiedTime = if (modifiedTimeSet) modifiedTime else result.modifiedTime,
                name = if (nameSet) name else result.name,
                password = if (passwordSet) password else result.password,
                pictures = if (picturesSet) pictures else result.pictures,
                play = if (playSet) play else result.play,
                privacy = if (privacySet) privacy else result.privacy,
                releaseTime = if (releaseTimeSet) releaseTime else result.releaseTime,
                resourceKey = if (resourceKeySet) resourceKey else result.resourceKey,
                reviewPage = if (reviewPageSet) reviewPage else result.reviewPage,
                fileTransferPage = if (fileTransferPageSet) fileTransferPage else result.fileTransferPage,
                spatial = if (spatialSet) spatial else result.spatial,
                stats = if (statsSet) stats else result.stats,
                status = if (statusSet) status else result.status,
                tags = if (tagsSet) tags else result.tags,
                transcode = if (transcodeSet) transcode else result.transcode,
                upload = if (uploadSet) upload else result.upload,
                uri = if (uriSet) uri else result.uri,
                user = if (userSet) user else result.user,
                width = if (widthSet) width else result.width)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Video?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("badge")
        nullableVideoBadgeAdapter.toJson(writer, value.badge)
        writer.name("categories")
        nullableListOfCategoryAdapter.toJson(writer, value.categories)
        writer.name("content_rating")
        nullableListOfStringAdapter.toJson(writer, value.contentRating)
        writer.name("context")
        nullableVideoContextAdapter.toJson(writer, value.context)
        writer.name("created_time")
        nullableDateAdapter.toJson(writer, value.createdTime)
        writer.name("description")
        nullableStringAdapter.toJson(writer, value.description)
        writer.name("duration")
        nullableIntAdapter.toJson(writer, value.duration)
        writer.name("embed")
        nullableVideoEmbedAdapter.toJson(writer, value.embed)
        writer.name("height")
        nullableIntAdapter.toJson(writer, value.height)
        writer.name("language")
        nullableStringAdapter.toJson(writer, value.language)
        writer.name("last_user_action_event_date")
        nullableDateAdapter.toJson(writer, value.lastUserActionEventDate)
        writer.name("license")
        nullableStringAdapter.toJson(writer, value.license)
        writer.name("link")
        nullableStringAdapter.toJson(writer, value.link)
        writer.name("live")
        nullableLiveAdapter.toJson(writer, value.live)
        writer.name("metadata")
        nullableMetadataOfVideoConnectionsVideoInteractionsAdapter.toJson(writer, value.metadata)
        writer.name("modified_time")
        nullableDateAdapter.toJson(writer, value.modifiedTime)
        writer.name("name")
        nullableStringAdapter.toJson(writer, value.name)
        writer.name("password")
        nullableStringAdapter.toJson(writer, value.password)
        writer.name("pictures")
        nullablePictureCollectionAdapter.toJson(writer, value.pictures)
        writer.name("play")
        nullablePlayAdapter.toJson(writer, value.play)
        writer.name("privacy")
        nullablePrivacyAdapter.toJson(writer, value.privacy)
        writer.name("release_time")
        nullableDateAdapter.toJson(writer, value.releaseTime)
        writer.name("resource_key")
        nullableStringAdapter.toJson(writer, value.resourceKey)
        writer.name("review_page")
        nullableReviewPageAdapter.toJson(writer, value.reviewPage)
        writer.name("file_transfer")
        nullableFileTransferPageAdapter.toJson(writer, value.fileTransferPage)
        writer.name("spatial")
        nullableSpatialAdapter.toJson(writer, value.spatial)
        writer.name("stats")
        nullableVideoStatsAdapter.toJson(writer, value.stats)
        writer.name("status")
        nullableStringAdapter.toJson(writer, value.status)
        writer.name("tags")
        nullableListOfTagAdapter.toJson(writer, value.tags)
        writer.name("transcode")
        nullableTranscodeAdapter.toJson(writer, value.transcode)
        writer.name("upload")
        nullableUploadAdapter.toJson(writer, value.upload)
        writer.name("uri")
        nullableStringAdapter.toJson(writer, value.uri)
        writer.name("user")
        nullableUserAdapter.toJson(writer, value.user)
        writer.name("width")
        nullableIntAdapter.toJson(writer, value.width)
        writer.endObject()
    }
}

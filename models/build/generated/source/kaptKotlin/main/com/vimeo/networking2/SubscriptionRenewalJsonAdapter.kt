// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.String

class SubscriptionRenewalJsonAdapter(moshi: Moshi) : JsonAdapter<SubscriptionRenewal>() {
    private val options: JsonReader.Options = JsonReader.Options.of("display_date", "renewal_date")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "displayDate")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "renewalDate")

    override fun toString(): String = "GeneratedJsonAdapter(SubscriptionRenewal)"

    override fun fromJson(reader: JsonReader): SubscriptionRenewal {
        var displayDate: String? = null
        var displayDateSet: Boolean = false
        var renewalDate: Date? = null
        var renewalDateSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    displayDate = nullableStringAdapter.fromJson(reader)
                    displayDateSet = true
                }
                1 ->  {
                    renewalDate = nullableDateAdapter.fromJson(reader)
                    renewalDateSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = SubscriptionRenewal()
        result = result.copy(
                displayDate = if (displayDateSet) displayDate else result.displayDate,
                renewalDate = if (renewalDateSet) renewalDate else result.renewalDate)
        return result
    }

    override fun toJson(writer: JsonWriter, value: SubscriptionRenewal?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("display_date")
        nullableStringAdapter.toJson(writer, value.displayDate)
        writer.name("renewal_date")
        nullableDateAdapter.toJson(writer, value.renewalDate)
        writer.endObject()
    }
}

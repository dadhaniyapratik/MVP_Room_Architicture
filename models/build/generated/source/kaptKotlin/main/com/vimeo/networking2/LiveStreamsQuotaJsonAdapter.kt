// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.Int
import kotlin.String

class LiveStreamsQuotaJsonAdapter(moshi: Moshi) : JsonAdapter<LiveStreamsQuota>() {
    private val options: JsonReader.Options = JsonReader.Options.of("maximum", "remaining")

    private val nullableIntAdapter: JsonAdapter<Int?> =
            moshi.adapter<Int?>(Int::class.javaObjectType, kotlin.collections.emptySet(), "maximum")

    override fun toString(): String = "GeneratedJsonAdapter(LiveStreamsQuota)"

    override fun fromJson(reader: JsonReader): LiveStreamsQuota {
        var maximum: Int? = null
        var maximumSet: Boolean = false
        var remaining: Int? = null
        var remainingSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    maximum = nullableIntAdapter.fromJson(reader)
                    maximumSet = true
                }
                1 ->  {
                    remaining = nullableIntAdapter.fromJson(reader)
                    remainingSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = LiveStreamsQuota()
        result = result.copy(
                maximum = if (maximumSet) maximum else result.maximum,
                remaining = if (remainingSet) remaining else result.remaining)
        return result
    }

    override fun toJson(writer: JsonWriter, value: LiveStreamsQuota?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("maximum")
        nullableIntAdapter.toJson(writer, value.maximum)
        writer.name("remaining")
        nullableIntAdapter.toJson(writer, value.remaining)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class AlbumInteractionsJsonAdapter(moshi: Moshi) : JsonAdapter<AlbumInteractions>() {
    private val options: JsonReader.Options = JsonReader.Options.of("add_logos", "add_videos")

    private val nullableBasicInteractionAdapter: JsonAdapter<BasicInteraction?> =
            moshi.adapter<BasicInteraction?>(BasicInteraction::class.java, kotlin.collections.emptySet(), "addLogos")

    override fun toString(): String = "GeneratedJsonAdapter(AlbumInteractions)"

    override fun fromJson(reader: JsonReader): AlbumInteractions {
        var addLogos: BasicInteraction? = null
        var addLogosSet: Boolean = false
        var addVideos: BasicInteraction? = null
        var addVideosSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    addLogos = nullableBasicInteractionAdapter.fromJson(reader)
                    addLogosSet = true
                }
                1 ->  {
                    addVideos = nullableBasicInteractionAdapter.fromJson(reader)
                    addVideosSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = AlbumInteractions()
        result = result.copy(
                addLogos = if (addLogosSet) addLogos else result.addLogos,
                addVideos = if (addVideosSet) addVideos else result.addVideos)
        return result
    }

    override fun toJson(writer: JsonWriter, value: AlbumInteractions?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("add_logos")
        nullableBasicInteractionAdapter.toJson(writer, value.addLogos)
        writer.name("add_videos")
        nullableBasicInteractionAdapter.toJson(writer, value.addVideos)
        writer.endObject()
    }
}

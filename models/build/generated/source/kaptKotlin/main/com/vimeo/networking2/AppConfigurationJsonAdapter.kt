// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class AppConfigurationJsonAdapter(moshi: Moshi) : JsonAdapter<AppConfiguration>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("api", "facebook", "features", "live")

    private val nullableApiConfigurationAdapter: JsonAdapter<ApiConfiguration?> =
            moshi.adapter<ApiConfiguration?>(ApiConfiguration::class.java, kotlin.collections.emptySet(), "api")

    private val nullableFacebookConfigurationAdapter: JsonAdapter<FacebookConfiguration?> =
            moshi.adapter<FacebookConfiguration?>(FacebookConfiguration::class.java, kotlin.collections.emptySet(), "facebook")

    private val nullableFeaturesConfigurationAdapter: JsonAdapter<FeaturesConfiguration?> =
            moshi.adapter<FeaturesConfiguration?>(FeaturesConfiguration::class.java, kotlin.collections.emptySet(), "features")

    private val nullableLiveConfigurationAdapter: JsonAdapter<LiveConfiguration?> =
            moshi.adapter<LiveConfiguration?>(LiveConfiguration::class.java, kotlin.collections.emptySet(), "live")

    override fun toString(): String = "GeneratedJsonAdapter(AppConfiguration)"

    override fun fromJson(reader: JsonReader): AppConfiguration {
        var api: ApiConfiguration? = null
        var apiSet: Boolean = false
        var facebook: FacebookConfiguration? = null
        var facebookSet: Boolean = false
        var features: FeaturesConfiguration? = null
        var featuresSet: Boolean = false
        var live: LiveConfiguration? = null
        var liveSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    api = nullableApiConfigurationAdapter.fromJson(reader)
                    apiSet = true
                }
                1 ->  {
                    facebook = nullableFacebookConfigurationAdapter.fromJson(reader)
                    facebookSet = true
                }
                2 ->  {
                    features = nullableFeaturesConfigurationAdapter.fromJson(reader)
                    featuresSet = true
                }
                3 ->  {
                    live = nullableLiveConfigurationAdapter.fromJson(reader)
                    liveSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = AppConfiguration()
        result = result.copy(
                api = if (apiSet) api else result.api,
                facebook = if (facebookSet) facebook else result.facebook,
                features = if (featuresSet) features else result.features,
                live = if (liveSet) live else result.live)
        return result
    }

    override fun toJson(writer: JsonWriter, value: AppConfiguration?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("api")
        nullableApiConfigurationAdapter.toJson(writer, value.api)
        writer.name("facebook")
        nullableFacebookConfigurationAdapter.toJson(writer, value.facebook)
        writer.name("features")
        nullableFeaturesConfigurationAdapter.toJson(writer, value.features)
        writer.name("live")
        nullableLiveConfigurationAdapter.toJson(writer, value.live)
        writer.endObject()
    }
}

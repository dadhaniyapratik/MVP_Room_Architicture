// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class SearchResultJsonAdapter(moshi: Moshi) : JsonAdapter<SearchResult>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("channel", "blog", "group", "video", "is_featured", "is_spatial", "is_staffpick", "people", "type")

    private val nullableChannelAdapter: JsonAdapter<Channel?> =
            moshi.adapter<Channel?>(Channel::class.java, kotlin.collections.emptySet(), "channel")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "blog")

    private val nullableGroupAdapter: JsonAdapter<Group?> =
            moshi.adapter<Group?>(Group::class.java, kotlin.collections.emptySet(), "group")

    private val nullableVideoAdapter: JsonAdapter<Video?> =
            moshi.adapter<Video?>(Video::class.java, kotlin.collections.emptySet(), "video")

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter<Boolean?>(Boolean::class.javaObjectType, kotlin.collections.emptySet(), "isFeatured")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(SearchResult)"

    override fun fromJson(reader: JsonReader): SearchResult {
        var channel: Channel? = null
        var channelSet: Boolean = false
        var blog: String? = null
        var blogSet: Boolean = false
        var group: Group? = null
        var groupSet: Boolean = false
        var video: Video? = null
        var videoSet: Boolean = false
        var isFeatured: Boolean? = null
        var isFeaturedSet: Boolean = false
        var isSpatial: Boolean? = null
        var isSpatialSet: Boolean = false
        var isStaffPick: Boolean? = null
        var isStaffPickSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    channel = nullableChannelAdapter.fromJson(reader)
                    channelSet = true
                }
                1 ->  {
                    blog = nullableStringAdapter.fromJson(reader)
                    blogSet = true
                }
                2 ->  {
                    group = nullableGroupAdapter.fromJson(reader)
                    groupSet = true
                }
                3 ->  {
                    video = nullableVideoAdapter.fromJson(reader)
                    videoSet = true
                }
                4 ->  {
                    isFeatured = nullableBooleanAdapter.fromJson(reader)
                    isFeaturedSet = true
                }
                5 ->  {
                    isSpatial = nullableBooleanAdapter.fromJson(reader)
                    isSpatialSet = true
                }
                6 ->  {
                    isStaffPick = nullableBooleanAdapter.fromJson(reader)
                    isStaffPickSet = true
                }
                7 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                8 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = SearchResult()
        result = result.copy(
                channel = if (channelSet) channel else result.channel,
                blog = if (blogSet) blog else result.blog,
                group = if (groupSet) group else result.group,
                video = if (videoSet) video else result.video,
                isFeatured = if (isFeaturedSet) isFeatured else result.isFeatured,
                isSpatial = if (isSpatialSet) isSpatial else result.isSpatial,
                isStaffPick = if (isStaffPickSet) isStaffPick else result.isStaffPick,
                user = if (userSet) user else result.user,
                rawType = if (rawTypeSet) rawType else result.rawType)
        return result
    }

    override fun toJson(writer: JsonWriter, value: SearchResult?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("channel")
        nullableChannelAdapter.toJson(writer, value.channel)
        writer.name("blog")
        nullableStringAdapter.toJson(writer, value.blog)
        writer.name("group")
        nullableGroupAdapter.toJson(writer, value.group)
        writer.name("video")
        nullableVideoAdapter.toJson(writer, value.video)
        writer.name("is_featured")
        nullableBooleanAdapter.toJson(writer, value.isFeatured)
        writer.name("is_spatial")
        nullableBooleanAdapter.toJson(writer, value.isSpatial)
        writer.name("is_staffpick")
        nullableBooleanAdapter.toJson(writer, value.isStaffPick)
        writer.name("people")
        nullableUserAdapter.toJson(writer, value.user)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class SubscriptionJsonAdapter(moshi: Moshi) : JsonAdapter<Subscription>() {
    private val options: JsonReader.Options = JsonReader.Options.of("renewal", "trial")

    private val nullableSubscriptionRenewalAdapter: JsonAdapter<SubscriptionRenewal?> =
            moshi.adapter<SubscriptionRenewal?>(SubscriptionRenewal::class.java, kotlin.collections.emptySet(), "renewal")

    private val nullableSubscriptionTrialAdapter: JsonAdapter<SubscriptionTrial?> =
            moshi.adapter<SubscriptionTrial?>(SubscriptionTrial::class.java, kotlin.collections.emptySet(), "trial")

    override fun toString(): String = "GeneratedJsonAdapter(Subscription)"

    override fun fromJson(reader: JsonReader): Subscription {
        var renewal: SubscriptionRenewal? = null
        var renewalSet: Boolean = false
        var trial: SubscriptionTrial? = null
        var trialSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    renewal = nullableSubscriptionRenewalAdapter.fromJson(reader)
                    renewalSet = true
                }
                1 ->  {
                    trial = nullableSubscriptionTrialAdapter.fromJson(reader)
                    trialSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Subscription()
        result = result.copy(
                renewal = if (renewalSet) renewal else result.renewal,
                trial = if (trialSet) trial else result.trial)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Subscription?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("renewal")
        nullableSubscriptionRenewalAdapter.toJson(writer, value.renewal)
        writer.name("trial")
        nullableSubscriptionTrialAdapter.toJson(writer, value.trial)
        writer.endObject()
    }
}

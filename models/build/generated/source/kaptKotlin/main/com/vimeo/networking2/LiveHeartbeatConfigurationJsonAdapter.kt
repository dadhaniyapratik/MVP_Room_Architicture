// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.Int
import kotlin.String

class LiveHeartbeatConfigurationJsonAdapter(moshi: Moshi) : JsonAdapter<LiveHeartbeatConfiguration>() {
    private val options: JsonReader.Options = JsonReader.Options.of("enabled", "interval")

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter<Boolean?>(Boolean::class.javaObjectType, kotlin.collections.emptySet(), "enabled")

    private val nullableIntAdapter: JsonAdapter<Int?> =
            moshi.adapter<Int?>(Int::class.javaObjectType, kotlin.collections.emptySet(), "interval")

    override fun toString(): String = "GeneratedJsonAdapter(LiveHeartbeatConfiguration)"

    override fun fromJson(reader: JsonReader): LiveHeartbeatConfiguration {
        var enabled: Boolean? = null
        var enabledSet: Boolean = false
        var interval: Int? = null
        var intervalSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    enabled = nullableBooleanAdapter.fromJson(reader)
                    enabledSet = true
                }
                1 ->  {
                    interval = nullableIntAdapter.fromJson(reader)
                    intervalSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = LiveHeartbeatConfiguration()
        result = result.copy(
                enabled = if (enabledSet) enabled else result.enabled,
                interval = if (intervalSet) interval else result.interval)
        return result
    }

    override fun toJson(writer: JsonWriter, value: LiveHeartbeatConfiguration?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("enabled")
        nullableBooleanAdapter.toJson(writer, value.enabled)
        writer.name("interval")
        nullableIntAdapter.toJson(writer, value.interval)
        writer.endObject()
    }
}

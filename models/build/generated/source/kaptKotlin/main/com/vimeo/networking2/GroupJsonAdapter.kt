// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.String

class GroupJsonAdapter(moshi: Moshi) : JsonAdapter<Group>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("created_time", "description", "link", "metadata", "modified_time", "name", "pictures", "privacy", "resource_key", "uri", "user")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "createdTime")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "description")

    private val nullableMetadataOfGroupConnectionsGroupInteractionsAdapter: JsonAdapter<Metadata<GroupConnections, GroupInteractions>?> =
            moshi.adapter<Metadata<GroupConnections, GroupInteractions>?>(Types.newParameterizedType(Metadata::class.java, GroupConnections::class.java, GroupInteractions::class.java), kotlin.collections.emptySet(), "metadata")

    private val nullablePictureCollectionAdapter: JsonAdapter<PictureCollection?> =
            moshi.adapter<PictureCollection?>(PictureCollection::class.java, kotlin.collections.emptySet(), "pictures")

    private val nullableGroupPrivacyAdapter: JsonAdapter<GroupPrivacy?> =
            moshi.adapter<GroupPrivacy?>(GroupPrivacy::class.java, kotlin.collections.emptySet(), "privacy")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(Group)"

    override fun fromJson(reader: JsonReader): Group {
        var createdTime: Date? = null
        var createdTimeSet: Boolean = false
        var description: String? = null
        var descriptionSet: Boolean = false
        var link: String? = null
        var linkSet: Boolean = false
        var metadata: Metadata<GroupConnections, GroupInteractions>? = null
        var metadataSet: Boolean = false
        var modifiedTime: Date? = null
        var modifiedTimeSet: Boolean = false
        var name: String? = null
        var nameSet: Boolean = false
        var pictures: PictureCollection? = null
        var picturesSet: Boolean = false
        var privacy: GroupPrivacy? = null
        var privacySet: Boolean = false
        var resourceKey: String? = null
        var resourceKeySet: Boolean = false
        var uri: String? = null
        var uriSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    createdTime = nullableDateAdapter.fromJson(reader)
                    createdTimeSet = true
                }
                1 ->  {
                    description = nullableStringAdapter.fromJson(reader)
                    descriptionSet = true
                }
                2 ->  {
                    link = nullableStringAdapter.fromJson(reader)
                    linkSet = true
                }
                3 ->  {
                    metadata = nullableMetadataOfGroupConnectionsGroupInteractionsAdapter.fromJson(reader)
                    metadataSet = true
                }
                4 ->  {
                    modifiedTime = nullableDateAdapter.fromJson(reader)
                    modifiedTimeSet = true
                }
                5 ->  {
                    name = nullableStringAdapter.fromJson(reader)
                    nameSet = true
                }
                6 ->  {
                    pictures = nullablePictureCollectionAdapter.fromJson(reader)
                    picturesSet = true
                }
                7 ->  {
                    privacy = nullableGroupPrivacyAdapter.fromJson(reader)
                    privacySet = true
                }
                8 ->  {
                    resourceKey = nullableStringAdapter.fromJson(reader)
                    resourceKeySet = true
                }
                9 ->  {
                    uri = nullableStringAdapter.fromJson(reader)
                    uriSet = true
                }
                10 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Group()
        result = result.copy(
                createdTime = if (createdTimeSet) createdTime else result.createdTime,
                description = if (descriptionSet) description else result.description,
                link = if (linkSet) link else result.link,
                metadata = if (metadataSet) metadata else result.metadata,
                modifiedTime = if (modifiedTimeSet) modifiedTime else result.modifiedTime,
                name = if (nameSet) name else result.name,
                pictures = if (picturesSet) pictures else result.pictures,
                privacy = if (privacySet) privacy else result.privacy,
                resourceKey = if (resourceKeySet) resourceKey else result.resourceKey,
                uri = if (uriSet) uri else result.uri,
                user = if (userSet) user else result.user)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Group?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("created_time")
        nullableDateAdapter.toJson(writer, value.createdTime)
        writer.name("description")
        nullableStringAdapter.toJson(writer, value.description)
        writer.name("link")
        nullableStringAdapter.toJson(writer, value.link)
        writer.name("metadata")
        nullableMetadataOfGroupConnectionsGroupInteractionsAdapter.toJson(writer, value.metadata)
        writer.name("modified_time")
        nullableDateAdapter.toJson(writer, value.modifiedTime)
        writer.name("name")
        nullableStringAdapter.toJson(writer, value.name)
        writer.name("pictures")
        nullablePictureCollectionAdapter.toJson(writer, value.pictures)
        writer.name("privacy")
        nullableGroupPrivacyAdapter.toJson(writer, value.privacy)
        writer.name("resource_key")
        nullableStringAdapter.toJson(writer, value.resourceKey)
        writer.name("uri")
        nullableStringAdapter.toJson(writer, value.uri)
        writer.name("user")
        nullableUserAdapter.toJson(writer, value.user)
        writer.endObject()
    }
}

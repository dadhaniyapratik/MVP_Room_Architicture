// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class TvodItemConnectionsJsonAdapter(moshi: Moshi) : JsonAdapter<TvodItemConnections>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("comment", "genres", "likes", "pictures", "seasons", "videos")

    private val nullableConnectionAdapter: JsonAdapter<Connection?> =
            moshi.adapter<Connection?>(Connection::class.java, kotlin.collections.emptySet(), "comments")

    private val nullableVideosTvodItemConnectionAdapter: JsonAdapter<VideosTvodItemConnection?> =
            moshi.adapter<VideosTvodItemConnection?>(VideosTvodItemConnection::class.java, kotlin.collections.emptySet(), "videos")

    override fun toString(): String = "GeneratedJsonAdapter(TvodItemConnections)"

    override fun fromJson(reader: JsonReader): TvodItemConnections {
        var comments: Connection? = null
        var commentsSet: Boolean = false
        var genres: Connection? = null
        var genresSet: Boolean = false
        var likes: Connection? = null
        var likesSet: Boolean = false
        var pictures: Connection? = null
        var picturesSet: Boolean = false
        var seasons: Connection? = null
        var seasonsSet: Boolean = false
        var videos: VideosTvodItemConnection? = null
        var videosSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    comments = nullableConnectionAdapter.fromJson(reader)
                    commentsSet = true
                }
                1 ->  {
                    genres = nullableConnectionAdapter.fromJson(reader)
                    genresSet = true
                }
                2 ->  {
                    likes = nullableConnectionAdapter.fromJson(reader)
                    likesSet = true
                }
                3 ->  {
                    pictures = nullableConnectionAdapter.fromJson(reader)
                    picturesSet = true
                }
                4 ->  {
                    seasons = nullableConnectionAdapter.fromJson(reader)
                    seasonsSet = true
                }
                5 ->  {
                    videos = nullableVideosTvodItemConnectionAdapter.fromJson(reader)
                    videosSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = TvodItemConnections()
        result = result.copy(
                comments = if (commentsSet) comments else result.comments,
                genres = if (genresSet) genres else result.genres,
                likes = if (likesSet) likes else result.likes,
                pictures = if (picturesSet) pictures else result.pictures,
                seasons = if (seasonsSet) seasons else result.seasons,
                videos = if (videosSet) videos else result.videos)
        return result
    }

    override fun toJson(writer: JsonWriter, value: TvodItemConnections?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("comment")
        nullableConnectionAdapter.toJson(writer, value.comments)
        writer.name("genres")
        nullableConnectionAdapter.toJson(writer, value.genres)
        writer.name("likes")
        nullableConnectionAdapter.toJson(writer, value.likes)
        writer.name("pictures")
        nullableConnectionAdapter.toJson(writer, value.pictures)
        writer.name("seasons")
        nullableConnectionAdapter.toJson(writer, value.seasons)
        writer.name("videos")
        nullableVideosTvodItemConnectionAdapter.toJson(writer, value.videos)
        writer.endObject()
    }
}

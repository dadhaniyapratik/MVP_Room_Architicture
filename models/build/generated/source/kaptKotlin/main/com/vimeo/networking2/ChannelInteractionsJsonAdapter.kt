// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class ChannelInteractionsJsonAdapter(moshi: Moshi) : JsonAdapter<ChannelInteractions>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("add_moderators", "add_to", "follow", "moderate_videos")

    private val nullableBasicInteractionAdapter: JsonAdapter<BasicInteraction?> =
            moshi.adapter<BasicInteraction?>(BasicInteraction::class.java, kotlin.collections.emptySet(), "addModerators")

    private val nullableChannelFollowInteractionAdapter: JsonAdapter<ChannelFollowInteraction?> =
            moshi.adapter<ChannelFollowInteraction?>(ChannelFollowInteraction::class.java, kotlin.collections.emptySet(), "follow")

    override fun toString(): String = "GeneratedJsonAdapter(ChannelInteractions)"

    override fun fromJson(reader: JsonReader): ChannelInteractions {
        var addModerators: BasicInteraction? = null
        var addModeratorsSet: Boolean = false
        var addTo: BasicInteraction? = null
        var addToSet: Boolean = false
        var follow: ChannelFollowInteraction? = null
        var followSet: Boolean = false
        var moderateVideos: BasicInteraction? = null
        var moderateVideosSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    addModerators = nullableBasicInteractionAdapter.fromJson(reader)
                    addModeratorsSet = true
                }
                1 ->  {
                    addTo = nullableBasicInteractionAdapter.fromJson(reader)
                    addToSet = true
                }
                2 ->  {
                    follow = nullableChannelFollowInteractionAdapter.fromJson(reader)
                    followSet = true
                }
                3 ->  {
                    moderateVideos = nullableBasicInteractionAdapter.fromJson(reader)
                    moderateVideosSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = ChannelInteractions()
        result = result.copy(
                addModerators = if (addModeratorsSet) addModerators else result.addModerators,
                addTo = if (addToSet) addTo else result.addTo,
                follow = if (followSet) follow else result.follow,
                moderateVideos = if (moderateVideosSet) moderateVideos else result.moderateVideos)
        return result
    }

    override fun toJson(writer: JsonWriter, value: ChannelInteractions?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("add_moderators")
        nullableBasicInteractionAdapter.toJson(writer, value.addModerators)
        writer.name("add_to")
        nullableBasicInteractionAdapter.toJson(writer, value.addTo)
        writer.name("follow")
        nullableChannelFollowInteractionAdapter.toJson(writer, value.follow)
        writer.name("moderate_videos")
        nullableBasicInteractionAdapter.toJson(writer, value.moderateVideos)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class VideoBadgesJsonAdapter(moshi: Moshi) : JsonAdapter<VideoBadges>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("hdr", "live", "weekendChallenge")

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter<Boolean?>(Boolean::class.javaObjectType, kotlin.collections.emptySet(), "hdr")

    private val nullableLiveAdapter: JsonAdapter<Live?> =
            moshi.adapter<Live?>(Live::class.java, kotlin.collections.emptySet(), "live")

    override fun toString(): String = "GeneratedJsonAdapter(VideoBadges)"

    override fun fromJson(reader: JsonReader): VideoBadges {
        var hdr: Boolean? = null
        var hdrSet: Boolean = false
        var live: Live? = null
        var liveSet: Boolean = false
        var weekendChallenge: Boolean? = null
        var weekendChallengeSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    hdr = nullableBooleanAdapter.fromJson(reader)
                    hdrSet = true
                }
                1 ->  {
                    live = nullableLiveAdapter.fromJson(reader)
                    liveSet = true
                }
                2 ->  {
                    weekendChallenge = nullableBooleanAdapter.fromJson(reader)
                    weekendChallengeSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = VideoBadges()
        result = result.copy(
                hdr = if (hdrSet) hdr else result.hdr,
                live = if (liveSet) live else result.live,
                weekendChallenge = if (weekendChallengeSet) weekendChallenge else result.weekendChallenge)
        return result
    }

    override fun toJson(writer: JsonWriter, value: VideoBadges?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("hdr")
        nullableBooleanAdapter.toJson(writer, value.hdr)
        writer.name("live")
        nullableLiveAdapter.toJson(writer, value.live)
        writer.name("weekendChallenge")
        nullableBooleanAdapter.toJson(writer, value.weekendChallenge)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class VideoEmbedJsonAdapter(moshi: Moshi) : JsonAdapter<VideoEmbed>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("badges", "buttons", "color", "html", "playBar", "speed", "title", "uri", "volume")

    private val nullableVideoBadgesAdapter: JsonAdapter<VideoBadges?> =
            moshi.adapter<VideoBadges?>(VideoBadges::class.java, kotlin.collections.emptySet(), "badges")

    private val nullableEmbedButtonsAdapter: JsonAdapter<EmbedButtons?> =
            moshi.adapter<EmbedButtons?>(EmbedButtons::class.java, kotlin.collections.emptySet(), "buttons")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "color")

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter<Boolean?>(Boolean::class.javaObjectType, kotlin.collections.emptySet(), "playBar")

    private val nullableEmbedTitleAdapter: JsonAdapter<EmbedTitle?> =
            moshi.adapter<EmbedTitle?>(EmbedTitle::class.java, kotlin.collections.emptySet(), "title")

    override fun toString(): String = "GeneratedJsonAdapter(VideoEmbed)"

    override fun fromJson(reader: JsonReader): VideoEmbed {
        var badges: VideoBadges? = null
        var badgesSet: Boolean = false
        var buttons: EmbedButtons? = null
        var buttonsSet: Boolean = false
        var color: String? = null
        var colorSet: Boolean = false
        var html: String? = null
        var htmlSet: Boolean = false
        var playBar: Boolean? = null
        var playBarSet: Boolean = false
        var speed: Boolean? = null
        var speedSet: Boolean = false
        var title: EmbedTitle? = null
        var titleSet: Boolean = false
        var uri: String? = null
        var uriSet: Boolean = false
        var volume: Boolean? = null
        var volumeSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    badges = nullableVideoBadgesAdapter.fromJson(reader)
                    badgesSet = true
                }
                1 ->  {
                    buttons = nullableEmbedButtonsAdapter.fromJson(reader)
                    buttonsSet = true
                }
                2 ->  {
                    color = nullableStringAdapter.fromJson(reader)
                    colorSet = true
                }
                3 ->  {
                    html = nullableStringAdapter.fromJson(reader)
                    htmlSet = true
                }
                4 ->  {
                    playBar = nullableBooleanAdapter.fromJson(reader)
                    playBarSet = true
                }
                5 ->  {
                    speed = nullableBooleanAdapter.fromJson(reader)
                    speedSet = true
                }
                6 ->  {
                    title = nullableEmbedTitleAdapter.fromJson(reader)
                    titleSet = true
                }
                7 ->  {
                    uri = nullableStringAdapter.fromJson(reader)
                    uriSet = true
                }
                8 ->  {
                    volume = nullableBooleanAdapter.fromJson(reader)
                    volumeSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = VideoEmbed()
        result = result.copy(
                badges = if (badgesSet) badges else result.badges,
                buttons = if (buttonsSet) buttons else result.buttons,
                color = if (colorSet) color else result.color,
                html = if (htmlSet) html else result.html,
                playBar = if (playBarSet) playBar else result.playBar,
                speed = if (speedSet) speed else result.speed,
                title = if (titleSet) title else result.title,
                uri = if (uriSet) uri else result.uri,
                volume = if (volumeSet) volume else result.volume)
        return result
    }

    override fun toJson(writer: JsonWriter, value: VideoEmbed?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("badges")
        nullableVideoBadgesAdapter.toJson(writer, value.badges)
        writer.name("buttons")
        nullableEmbedButtonsAdapter.toJson(writer, value.buttons)
        writer.name("color")
        nullableStringAdapter.toJson(writer, value.color)
        writer.name("html")
        nullableStringAdapter.toJson(writer, value.html)
        writer.name("playBar")
        nullableBooleanAdapter.toJson(writer, value.playBar)
        writer.name("speed")
        nullableBooleanAdapter.toJson(writer, value.speed)
        writer.name("title")
        nullableEmbedTitleAdapter.toJson(writer, value.title)
        writer.name("uri")
        nullableStringAdapter.toJson(writer, value.uri)
        writer.name("volume")
        nullableBooleanAdapter.toJson(writer, value.volume)
        writer.endObject()
    }
}

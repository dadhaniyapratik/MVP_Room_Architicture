// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import java.lang.reflect.Type
import kotlin.Array
import kotlin.Boolean
import kotlin.String

class MetadataConnectionsJsonAdapter<Connections_T>(moshi: Moshi, types: Array<Type>) : JsonAdapter<MetadataConnections<Connections_T>>() {
    private val options: JsonReader.Options = JsonReader.Options.of("connections")

    private val nullableConnections_TNullableAnyAdapter: JsonAdapter<Connections_T?> =
            moshi.adapter<Connections_T?>(types[0], kotlin.collections.emptySet(), "connections")

    override fun toString(): String = "GeneratedJsonAdapter(MetadataConnections)"

    override fun fromJson(reader: JsonReader): MetadataConnections<Connections_T> {
        var connections: Connections_T? = null
        var connectionsSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    connections = nullableConnections_TNullableAnyAdapter.fromJson(reader)
                    connectionsSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = MetadataConnections<Connections_T>()
        result = result.copy(
                connections = if (connectionsSet) connections else result.connections)
        return result
    }

    override fun toJson(writer: JsonWriter, value: MetadataConnections<Connections_T>?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("connections")
        nullableConnections_TNullableAnyAdapter.toJson(writer, value.connections)
        writer.endObject()
    }
}

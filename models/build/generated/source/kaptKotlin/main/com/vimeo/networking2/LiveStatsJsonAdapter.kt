// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.Long
import kotlin.String

class LiveStatsJsonAdapter(moshi: Moshi) : JsonAdapter<LiveStats>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("plays", "total_view_time", "viewers")

    private val nullableLongAdapter: JsonAdapter<Long?> =
            moshi.adapter<Long?>(Long::class.javaObjectType, kotlin.collections.emptySet(), "plays")

    private val nullableLiveStatsViewersAdapter: JsonAdapter<LiveStatsViewers?> =
            moshi.adapter<LiveStatsViewers?>(LiveStatsViewers::class.java, kotlin.collections.emptySet(), "viewers")

    override fun toString(): String = "GeneratedJsonAdapter(LiveStats)"

    override fun fromJson(reader: JsonReader): LiveStats {
        var plays: Long? = null
        var playsSet: Boolean = false
        var totalViewTime: Long? = null
        var totalViewTimeSet: Boolean = false
        var viewers: LiveStatsViewers? = null
        var viewersSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    plays = nullableLongAdapter.fromJson(reader)
                    playsSet = true
                }
                1 ->  {
                    totalViewTime = nullableLongAdapter.fromJson(reader)
                    totalViewTimeSet = true
                }
                2 ->  {
                    viewers = nullableLiveStatsViewersAdapter.fromJson(reader)
                    viewersSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = LiveStats()
        result = result.copy(
                plays = if (playsSet) plays else result.plays,
                totalViewTime = if (totalViewTimeSet) totalViewTime else result.totalViewTime,
                viewers = if (viewersSet) viewers else result.viewers)
        return result
    }

    override fun toJson(writer: JsonWriter, value: LiveStats?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("plays")
        nullableLongAdapter.toJson(writer, value.plays)
        writer.name("total_view_time")
        nullableLongAdapter.toJson(writer, value.totalViewTime)
        writer.name("viewers")
        nullableLiveStatsViewersAdapter.toJson(writer, value.viewers)
        writer.endObject()
    }
}

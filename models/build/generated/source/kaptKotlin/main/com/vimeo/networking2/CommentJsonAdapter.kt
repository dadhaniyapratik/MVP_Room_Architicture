// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.String

class CommentJsonAdapter(moshi: Moshi) : JsonAdapter<Comment>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("created_on", "metadata", "resource_key", "text", "type", "user")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "createdOn")

    private val nullableMetadataConnectionsOfCommentConnectionsAdapter: JsonAdapter<MetadataConnections<CommentConnections>?> =
            moshi.adapter<MetadataConnections<CommentConnections>?>(Types.newParameterizedType(MetadataConnections::class.java, CommentConnections::class.java), kotlin.collections.emptySet(), "metadata")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "resourceKey")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(Comment)"

    override fun fromJson(reader: JsonReader): Comment {
        var createdOn: Date? = null
        var createdOnSet: Boolean = false
        var metadata: MetadataConnections<CommentConnections>? = null
        var metadataSet: Boolean = false
        var resourceKey: String? = null
        var resourceKeySet: Boolean = false
        var text: String? = null
        var textSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    createdOn = nullableDateAdapter.fromJson(reader)
                    createdOnSet = true
                }
                1 ->  {
                    metadata = nullableMetadataConnectionsOfCommentConnectionsAdapter.fromJson(reader)
                    metadataSet = true
                }
                2 ->  {
                    resourceKey = nullableStringAdapter.fromJson(reader)
                    resourceKeySet = true
                }
                3 ->  {
                    text = nullableStringAdapter.fromJson(reader)
                    textSet = true
                }
                4 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                5 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Comment()
        result = result.copy(
                createdOn = if (createdOnSet) createdOn else result.createdOn,
                metadata = if (metadataSet) metadata else result.metadata,
                resourceKey = if (resourceKeySet) resourceKey else result.resourceKey,
                text = if (textSet) text else result.text,
                rawType = if (rawTypeSet) rawType else result.rawType,
                user = if (userSet) user else result.user)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Comment?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("created_on")
        nullableDateAdapter.toJson(writer, value.createdOn)
        writer.name("metadata")
        nullableMetadataConnectionsOfCommentConnectionsAdapter.toJson(writer, value.metadata)
        writer.name("resource_key")
        nullableStringAdapter.toJson(writer, value.resourceKey)
        writer.name("text")
        nullableStringAdapter.toJson(writer, value.text)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.name("user")
        nullableUserAdapter.toJson(writer, value.user)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.String

class FeedItemJsonAdapter(moshi: Moshi) : JsonAdapter<FeedItem>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("category", "channel", "group", "metadata", "tag", "time", "type", "clip", "uri", "user")

    private val nullableCategoryAdapter: JsonAdapter<Category?> =
            moshi.adapter<Category?>(Category::class.java, kotlin.collections.emptySet(), "category")

    private val nullableChannelAdapter: JsonAdapter<Channel?> =
            moshi.adapter<Channel?>(Channel::class.java, kotlin.collections.emptySet(), "channel")

    private val nullableGroupAdapter: JsonAdapter<Group?> =
            moshi.adapter<Group?>(Group::class.java, kotlin.collections.emptySet(), "group")

    private val nullableMetadataConnectionsOfFeedItemConnectionsAdapter: JsonAdapter<MetadataConnections<FeedItemConnections>?> =
            moshi.adapter<MetadataConnections<FeedItemConnections>?>(Types.newParameterizedType(MetadataConnections::class.java, FeedItemConnections::class.java), kotlin.collections.emptySet(), "metadata")

    private val nullableTagAdapter: JsonAdapter<Tag?> =
            moshi.adapter<Tag?>(Tag::class.java, kotlin.collections.emptySet(), "tag")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "time")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "rawType")

    private val nullableVideoAdapter: JsonAdapter<Video?> =
            moshi.adapter<Video?>(Video::class.java, kotlin.collections.emptySet(), "video")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(FeedItem)"

    override fun fromJson(reader: JsonReader): FeedItem {
        var category: Category? = null
        var categorySet: Boolean = false
        var channel: Channel? = null
        var channelSet: Boolean = false
        var group: Group? = null
        var groupSet: Boolean = false
        var metadata: MetadataConnections<FeedItemConnections>? = null
        var metadataSet: Boolean = false
        var tag: Tag? = null
        var tagSet: Boolean = false
        var time: Date? = null
        var timeSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        var video: Video? = null
        var videoSet: Boolean = false
        var uri: String? = null
        var uriSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    category = nullableCategoryAdapter.fromJson(reader)
                    categorySet = true
                }
                1 ->  {
                    channel = nullableChannelAdapter.fromJson(reader)
                    channelSet = true
                }
                2 ->  {
                    group = nullableGroupAdapter.fromJson(reader)
                    groupSet = true
                }
                3 ->  {
                    metadata = nullableMetadataConnectionsOfFeedItemConnectionsAdapter.fromJson(reader)
                    metadataSet = true
                }
                4 ->  {
                    tag = nullableTagAdapter.fromJson(reader)
                    tagSet = true
                }
                5 ->  {
                    time = nullableDateAdapter.fromJson(reader)
                    timeSet = true
                }
                6 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                7 ->  {
                    video = nullableVideoAdapter.fromJson(reader)
                    videoSet = true
                }
                8 ->  {
                    uri = nullableStringAdapter.fromJson(reader)
                    uriSet = true
                }
                9 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = FeedItem()
        result = result.copy(
                category = if (categorySet) category else result.category,
                channel = if (channelSet) channel else result.channel,
                group = if (groupSet) group else result.group,
                metadata = if (metadataSet) metadata else result.metadata,
                tag = if (tagSet) tag else result.tag,
                time = if (timeSet) time else result.time,
                rawType = if (rawTypeSet) rawType else result.rawType,
                video = if (videoSet) video else result.video,
                uri = if (uriSet) uri else result.uri,
                user = if (userSet) user else result.user)
        return result
    }

    override fun toJson(writer: JsonWriter, value: FeedItem?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("category")
        nullableCategoryAdapter.toJson(writer, value.category)
        writer.name("channel")
        nullableChannelAdapter.toJson(writer, value.channel)
        writer.name("group")
        nullableGroupAdapter.toJson(writer, value.group)
        writer.name("metadata")
        nullableMetadataConnectionsOfFeedItemConnectionsAdapter.toJson(writer, value.metadata)
        writer.name("tag")
        nullableTagAdapter.toJson(writer, value.tag)
        writer.name("time")
        nullableDateAdapter.toJson(writer, value.time)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.name("clip")
        nullableVideoAdapter.toJson(writer, value.video)
        writer.name("uri")
        nullableStringAdapter.toJson(writer, value.uri)
        writer.name("user")
        nullableUserAdapter.toJson(writer, value.user)
        writer.endObject()
    }
}

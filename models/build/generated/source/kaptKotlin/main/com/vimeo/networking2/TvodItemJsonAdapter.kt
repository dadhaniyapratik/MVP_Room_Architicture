// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class TvodItemJsonAdapter(moshi: Moshi) : JsonAdapter<TvodItem>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("description", "film", "link", "metadata", "name", "pictures", "published", "type", "trailer", "user")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "description")

    private val nullableVideoAdapter: JsonAdapter<Video?> =
            moshi.adapter<Video?>(Video::class.java, kotlin.collections.emptySet(), "film")

    private val nullableMetadataOfTvodItemConnectionsPurchaseOnDemandInteractionAdapter: JsonAdapter<Metadata<TvodItemConnections, PurchaseOnDemandInteraction>?> =
            moshi.adapter<Metadata<TvodItemConnections, PurchaseOnDemandInteraction>?>(Types.newParameterizedType(Metadata::class.java, TvodItemConnections::class.java, PurchaseOnDemandInteraction::class.java), kotlin.collections.emptySet(), "metadata")

    private val nullablePictureCollectionAdapter: JsonAdapter<PictureCollection?> =
            moshi.adapter<PictureCollection?>(PictureCollection::class.java, kotlin.collections.emptySet(), "pictures")

    private val nullablePublishAdapter: JsonAdapter<Publish?> =
            moshi.adapter<Publish?>(Publish::class.java, kotlin.collections.emptySet(), "published")

    private val nullableUserAdapter: JsonAdapter<User?> =
            moshi.adapter<User?>(User::class.java, kotlin.collections.emptySet(), "user")

    override fun toString(): String = "GeneratedJsonAdapter(TvodItem)"

    override fun fromJson(reader: JsonReader): TvodItem {
        var description: String? = null
        var descriptionSet: Boolean = false
        var film: Video? = null
        var filmSet: Boolean = false
        var link: String? = null
        var linkSet: Boolean = false
        var metadata: Metadata<TvodItemConnections, PurchaseOnDemandInteraction>? = null
        var metadataSet: Boolean = false
        var name: String? = null
        var nameSet: Boolean = false
        var pictures: PictureCollection? = null
        var picturesSet: Boolean = false
        var published: Publish? = null
        var publishedSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        var trailer: Video? = null
        var trailerSet: Boolean = false
        var user: User? = null
        var userSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    description = nullableStringAdapter.fromJson(reader)
                    descriptionSet = true
                }
                1 ->  {
                    film = nullableVideoAdapter.fromJson(reader)
                    filmSet = true
                }
                2 ->  {
                    link = nullableStringAdapter.fromJson(reader)
                    linkSet = true
                }
                3 ->  {
                    metadata = nullableMetadataOfTvodItemConnectionsPurchaseOnDemandInteractionAdapter.fromJson(reader)
                    metadataSet = true
                }
                4 ->  {
                    name = nullableStringAdapter.fromJson(reader)
                    nameSet = true
                }
                5 ->  {
                    pictures = nullablePictureCollectionAdapter.fromJson(reader)
                    picturesSet = true
                }
                6 ->  {
                    published = nullablePublishAdapter.fromJson(reader)
                    publishedSet = true
                }
                7 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                8 ->  {
                    trailer = nullableVideoAdapter.fromJson(reader)
                    trailerSet = true
                }
                9 ->  {
                    user = nullableUserAdapter.fromJson(reader)
                    userSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = TvodItem()
        result = result.copy(
                description = if (descriptionSet) description else result.description,
                film = if (filmSet) film else result.film,
                link = if (linkSet) link else result.link,
                metadata = if (metadataSet) metadata else result.metadata,
                name = if (nameSet) name else result.name,
                pictures = if (picturesSet) pictures else result.pictures,
                published = if (publishedSet) published else result.published,
                rawType = if (rawTypeSet) rawType else result.rawType,
                trailer = if (trailerSet) trailer else result.trailer,
                user = if (userSet) user else result.user)
        return result
    }

    override fun toJson(writer: JsonWriter, value: TvodItem?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("description")
        nullableStringAdapter.toJson(writer, value.description)
        writer.name("film")
        nullableVideoAdapter.toJson(writer, value.film)
        writer.name("link")
        nullableStringAdapter.toJson(writer, value.link)
        writer.name("metadata")
        nullableMetadataOfTvodItemConnectionsPurchaseOnDemandInteractionAdapter.toJson(writer, value.metadata)
        writer.name("name")
        nullableStringAdapter.toJson(writer, value.name)
        writer.name("pictures")
        nullablePictureCollectionAdapter.toJson(writer, value.pictures)
        writer.name("published")
        nullablePublishAdapter.toJson(writer, value.published)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.name("trailer")
        nullableVideoAdapter.toJson(writer, value.trailer)
        writer.name("user")
        nullableUserAdapter.toJson(writer, value.user)
        writer.endObject()
    }
}

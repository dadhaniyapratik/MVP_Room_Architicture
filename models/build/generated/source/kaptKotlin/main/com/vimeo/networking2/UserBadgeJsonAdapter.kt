// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class UserBadgeJsonAdapter(moshi: Moshi) : JsonAdapter<UserBadge>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("alt_text", "text", "type", "url")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "altText")

    override fun toString(): String = "GeneratedJsonAdapter(UserBadge)"

    override fun fromJson(reader: JsonReader): UserBadge {
        var altText: String? = null
        var altTextSet: Boolean = false
        var text: String? = null
        var textSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        var url: String? = null
        var urlSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    altText = nullableStringAdapter.fromJson(reader)
                    altTextSet = true
                }
                1 ->  {
                    text = nullableStringAdapter.fromJson(reader)
                    textSet = true
                }
                2 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                3 ->  {
                    url = nullableStringAdapter.fromJson(reader)
                    urlSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = UserBadge()
        result = result.copy(
                altText = if (altTextSet) altText else result.altText,
                text = if (textSet) text else result.text,
                rawType = if (rawTypeSet) rawType else result.rawType,
                url = if (urlSet) url else result.url)
        return result
    }

    override fun toJson(writer: JsonWriter, value: UserBadge?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("alt_text")
        nullableStringAdapter.toJson(writer, value.altText)
        writer.name("text")
        nullableStringAdapter.toJson(writer, value.text)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.name("url")
        nullableStringAdapter.toJson(writer, value.url)
        writer.endObject()
    }
}

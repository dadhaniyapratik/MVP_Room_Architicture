// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class ProductInteractionsJsonAdapter(moshi: Moshi) : JsonAdapter<ProductInteractions>() {
    private val options: JsonReader.Options = JsonReader.Options.of("purchase")

    private val nullablePurchaseInteractionAdapter: JsonAdapter<PurchaseInteraction?> =
            moshi.adapter<PurchaseInteraction?>(PurchaseInteraction::class.java, kotlin.collections.emptySet(), "purchase")

    override fun toString(): String = "GeneratedJsonAdapter(ProductInteractions)"

    override fun fromJson(reader: JsonReader): ProductInteractions {
        var purchase: PurchaseInteraction? = null
        var purchaseSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    purchase = nullablePurchaseInteractionAdapter.fromJson(reader)
                    purchaseSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = ProductInteractions()
        result = result.copy(
                purchase = if (purchaseSet) purchase else result.purchase)
        return result
    }

    override fun toJson(writer: JsonWriter, value: ProductInteractions?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("purchase")
        nullablePurchaseInteractionAdapter.toJson(writer, value.purchase)
        writer.endObject()
    }
}

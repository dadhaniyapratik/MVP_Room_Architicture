// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class VideoConnectionsJsonAdapter(moshi: Moshi) : JsonAdapter<VideoConnections>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("comment", "credit", "likes", "live_stats", "pictures", "playback", "recommendations", "related", "season", "texttracks", "trailer", "users_with_access")

    private val nullableConnectionAdapter: JsonAdapter<Connection?> =
            moshi.adapter<Connection?>(Connection::class.java, kotlin.collections.emptySet(), "comment")

    override fun toString(): String = "GeneratedJsonAdapter(VideoConnections)"

    override fun fromJson(reader: JsonReader): VideoConnections {
        var comment: Connection? = null
        var commentSet: Boolean = false
        var credit: Connection? = null
        var creditSet: Boolean = false
        var likes: Connection? = null
        var likesSet: Boolean = false
        var liveStats: Connection? = null
        var liveStatsSet: Boolean = false
        var pictures: Connection? = null
        var picturesSet: Boolean = false
        var playback: Connection? = null
        var playbackSet: Boolean = false
        var recommendations: Connection? = null
        var recommendationsSet: Boolean = false
        var related: Connection? = null
        var relatedSet: Boolean = false
        var season: Connection? = null
        var seasonSet: Boolean = false
        var textTracks: Connection? = null
        var textTracksSet: Boolean = false
        var trailer: Connection? = null
        var trailerSet: Boolean = false
        var usersWithAccess: Connection? = null
        var usersWithAccessSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    comment = nullableConnectionAdapter.fromJson(reader)
                    commentSet = true
                }
                1 ->  {
                    credit = nullableConnectionAdapter.fromJson(reader)
                    creditSet = true
                }
                2 ->  {
                    likes = nullableConnectionAdapter.fromJson(reader)
                    likesSet = true
                }
                3 ->  {
                    liveStats = nullableConnectionAdapter.fromJson(reader)
                    liveStatsSet = true
                }
                4 ->  {
                    pictures = nullableConnectionAdapter.fromJson(reader)
                    picturesSet = true
                }
                5 ->  {
                    playback = nullableConnectionAdapter.fromJson(reader)
                    playbackSet = true
                }
                6 ->  {
                    recommendations = nullableConnectionAdapter.fromJson(reader)
                    recommendationsSet = true
                }
                7 ->  {
                    related = nullableConnectionAdapter.fromJson(reader)
                    relatedSet = true
                }
                8 ->  {
                    season = nullableConnectionAdapter.fromJson(reader)
                    seasonSet = true
                }
                9 ->  {
                    textTracks = nullableConnectionAdapter.fromJson(reader)
                    textTracksSet = true
                }
                10 ->  {
                    trailer = nullableConnectionAdapter.fromJson(reader)
                    trailerSet = true
                }
                11 ->  {
                    usersWithAccess = nullableConnectionAdapter.fromJson(reader)
                    usersWithAccessSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = VideoConnections()
        result = result.copy(
                comment = if (commentSet) comment else result.comment,
                credit = if (creditSet) credit else result.credit,
                likes = if (likesSet) likes else result.likes,
                liveStats = if (liveStatsSet) liveStats else result.liveStats,
                pictures = if (picturesSet) pictures else result.pictures,
                playback = if (playbackSet) playback else result.playback,
                recommendations = if (recommendationsSet) recommendations else result.recommendations,
                related = if (relatedSet) related else result.related,
                season = if (seasonSet) season else result.season,
                textTracks = if (textTracksSet) textTracks else result.textTracks,
                trailer = if (trailerSet) trailer else result.trailer,
                usersWithAccess = if (usersWithAccessSet) usersWithAccess else result.usersWithAccess)
        return result
    }

    override fun toJson(writer: JsonWriter, value: VideoConnections?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("comment")
        nullableConnectionAdapter.toJson(writer, value.comment)
        writer.name("credit")
        nullableConnectionAdapter.toJson(writer, value.credit)
        writer.name("likes")
        nullableConnectionAdapter.toJson(writer, value.likes)
        writer.name("live_stats")
        nullableConnectionAdapter.toJson(writer, value.liveStats)
        writer.name("pictures")
        nullableConnectionAdapter.toJson(writer, value.pictures)
        writer.name("playback")
        nullableConnectionAdapter.toJson(writer, value.playback)
        writer.name("recommendations")
        nullableConnectionAdapter.toJson(writer, value.recommendations)
        writer.name("related")
        nullableConnectionAdapter.toJson(writer, value.related)
        writer.name("season")
        nullableConnectionAdapter.toJson(writer, value.season)
        writer.name("texttracks")
        nullableConnectionAdapter.toJson(writer, value.textTracks)
        writer.name("trailer")
        nullableConnectionAdapter.toJson(writer, value.trailer)
        writer.name("users_with_access")
        nullableConnectionAdapter.toJson(writer, value.usersWithAccess)
        writer.endObject()
    }
}

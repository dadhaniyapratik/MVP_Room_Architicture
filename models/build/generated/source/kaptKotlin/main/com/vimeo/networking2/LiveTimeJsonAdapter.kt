// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.Long
import kotlin.String

class LiveTimeJsonAdapter(moshi: Moshi) : JsonAdapter<LiveTime>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("event_maximum", "monthly_maximum", "monthly_remaining")

    private val nullableLongAdapter: JsonAdapter<Long?> =
            moshi.adapter<Long?>(Long::class.javaObjectType, kotlin.collections.emptySet(), "eventMaximum")

    override fun toString(): String = "GeneratedJsonAdapter(LiveTime)"

    override fun fromJson(reader: JsonReader): LiveTime {
        var eventMaximum: Long? = null
        var eventMaximumSet: Boolean = false
        var monthlyMaximum: Long? = null
        var monthlyMaximumSet: Boolean = false
        var monthlyRemaining: Long? = null
        var monthlyRemainingSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    eventMaximum = nullableLongAdapter.fromJson(reader)
                    eventMaximumSet = true
                }
                1 ->  {
                    monthlyMaximum = nullableLongAdapter.fromJson(reader)
                    monthlyMaximumSet = true
                }
                2 ->  {
                    monthlyRemaining = nullableLongAdapter.fromJson(reader)
                    monthlyRemainingSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = LiveTime()
        result = result.copy(
                eventMaximum = if (eventMaximumSet) eventMaximum else result.eventMaximum,
                monthlyMaximum = if (monthlyMaximumSet) monthlyMaximum else result.monthlyMaximum,
                monthlyRemaining = if (monthlyRemainingSet) monthlyRemaining else result.monthlyRemaining)
        return result
    }

    override fun toJson(writer: JsonWriter, value: LiveTime?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("event_maximum")
        nullableLongAdapter.toJson(writer, value.eventMaximum)
        writer.name("monthly_maximum")
        nullableLongAdapter.toJson(writer, value.monthlyMaximum)
        writer.name("monthly_remaining")
        nullableLongAdapter.toJson(writer, value.monthlyRemaining)
        writer.endObject()
    }
}

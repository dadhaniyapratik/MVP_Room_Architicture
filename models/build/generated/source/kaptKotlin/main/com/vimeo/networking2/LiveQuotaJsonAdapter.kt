// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class LiveQuotaJsonAdapter(moshi: Moshi) : JsonAdapter<LiveQuota>() {
    private val options: JsonReader.Options = JsonReader.Options.of("streams", "time")

    private val nullableLiveStreamsQuotaAdapter: JsonAdapter<LiveStreamsQuota?> =
            moshi.adapter<LiveStreamsQuota?>(LiveStreamsQuota::class.java, kotlin.collections.emptySet(), "streams")

    private val nullableLiveTimeAdapter: JsonAdapter<LiveTime?> =
            moshi.adapter<LiveTime?>(LiveTime::class.java, kotlin.collections.emptySet(), "time")

    override fun toString(): String = "GeneratedJsonAdapter(LiveQuota)"

    override fun fromJson(reader: JsonReader): LiveQuota {
        var streams: LiveStreamsQuota? = null
        var streamsSet: Boolean = false
        var time: LiveTime? = null
        var timeSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    streams = nullableLiveStreamsQuotaAdapter.fromJson(reader)
                    streamsSet = true
                }
                1 ->  {
                    time = nullableLiveTimeAdapter.fromJson(reader)
                    timeSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = LiveQuota()
        result = result.copy(
                streams = if (streamsSet) streams else result.streams,
                time = if (timeSet) time else result.time)
        return result
    }

    override fun toJson(writer: JsonWriter, value: LiveQuota?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("streams")
        nullableLiveStreamsQuotaAdapter.toJson(writer, value.streams)
        writer.name("time")
        nullableLiveTimeAdapter.toJson(writer, value.time)
        writer.endObject()
    }
}

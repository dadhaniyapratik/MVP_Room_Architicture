// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class AlbumPrivacyJsonAdapter(moshi: Moshi) : JsonAdapter<AlbumPrivacy>() {
    private val options: JsonReader.Options = JsonReader.Options.of("password", "view")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "password")

    override fun toString(): String = "GeneratedJsonAdapter(AlbumPrivacy)"

    override fun fromJson(reader: JsonReader): AlbumPrivacy {
        var password: String? = null
        var passwordSet: Boolean = false
        var viewPrivacy: String? = null
        var viewPrivacySet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    password = nullableStringAdapter.fromJson(reader)
                    passwordSet = true
                }
                1 ->  {
                    viewPrivacy = nullableStringAdapter.fromJson(reader)
                    viewPrivacySet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = AlbumPrivacy()
        result = result.copy(
                password = if (passwordSet) password else result.password,
                viewPrivacy = if (viewPrivacySet) viewPrivacy else result.viewPrivacy)
        return result
    }

    override fun toJson(writer: JsonWriter, value: AlbumPrivacy?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("password")
        nullableStringAdapter.toJson(writer, value.password)
        writer.name("view")
        nullableStringAdapter.toJson(writer, value.viewPrivacy)
        writer.endObject()
    }
}

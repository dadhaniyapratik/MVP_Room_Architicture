// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class VideoInteractionsJsonAdapter(moshi: Moshi) : JsonAdapter<VideoInteractions>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("buy", "channel", "like", "rent", "report", "subscribe", "watchlater")

    private val nullableBuyInteractionAdapter: JsonAdapter<BuyInteraction?> =
            moshi.adapter<BuyInteraction?>(BuyInteraction::class.java, kotlin.collections.emptySet(), "buy")

    private val nullableBasicInteractionAdapter: JsonAdapter<BasicInteraction?> =
            moshi.adapter<BasicInteraction?>(BasicInteraction::class.java, kotlin.collections.emptySet(), "channel")

    private val nullableLikeInteractionAdapter: JsonAdapter<LikeInteraction?> =
            moshi.adapter<LikeInteraction?>(LikeInteraction::class.java, kotlin.collections.emptySet(), "like")

    private val nullableRentInteractionAdapter: JsonAdapter<RentInteraction?> =
            moshi.adapter<RentInteraction?>(RentInteraction::class.java, kotlin.collections.emptySet(), "rent")

    private val nullableSubscriptionInteractionAdapter: JsonAdapter<SubscriptionInteraction?> =
            moshi.adapter<SubscriptionInteraction?>(SubscriptionInteraction::class.java, kotlin.collections.emptySet(), "subscription")

    private val nullableWatchLaterInteractionAdapter: JsonAdapter<WatchLaterInteraction?> =
            moshi.adapter<WatchLaterInteraction?>(WatchLaterInteraction::class.java, kotlin.collections.emptySet(), "watchLater")

    override fun toString(): String = "GeneratedJsonAdapter(VideoInteractions)"

    override fun fromJson(reader: JsonReader): VideoInteractions {
        var buy: BuyInteraction? = null
        var buySet: Boolean = false
        var channel: BasicInteraction? = null
        var channelSet: Boolean = false
        var like: LikeInteraction? = null
        var likeSet: Boolean = false
        var rent: RentInteraction? = null
        var rentSet: Boolean = false
        var report: BasicInteraction? = null
        var reportSet: Boolean = false
        var subscription: SubscriptionInteraction? = null
        var subscriptionSet: Boolean = false
        var watchLater: WatchLaterInteraction? = null
        var watchLaterSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    buy = nullableBuyInteractionAdapter.fromJson(reader)
                    buySet = true
                }
                1 ->  {
                    channel = nullableBasicInteractionAdapter.fromJson(reader)
                    channelSet = true
                }
                2 ->  {
                    like = nullableLikeInteractionAdapter.fromJson(reader)
                    likeSet = true
                }
                3 ->  {
                    rent = nullableRentInteractionAdapter.fromJson(reader)
                    rentSet = true
                }
                4 ->  {
                    report = nullableBasicInteractionAdapter.fromJson(reader)
                    reportSet = true
                }
                5 ->  {
                    subscription = nullableSubscriptionInteractionAdapter.fromJson(reader)
                    subscriptionSet = true
                }
                6 ->  {
                    watchLater = nullableWatchLaterInteractionAdapter.fromJson(reader)
                    watchLaterSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = VideoInteractions()
        result = result.copy(
                buy = if (buySet) buy else result.buy,
                channel = if (channelSet) channel else result.channel,
                like = if (likeSet) like else result.like,
                rent = if (rentSet) rent else result.rent,
                report = if (reportSet) report else result.report,
                subscription = if (subscriptionSet) subscription else result.subscription,
                watchLater = if (watchLaterSet) watchLater else result.watchLater)
        return result
    }

    override fun toJson(writer: JsonWriter, value: VideoInteractions?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("buy")
        nullableBuyInteractionAdapter.toJson(writer, value.buy)
        writer.name("channel")
        nullableBasicInteractionAdapter.toJson(writer, value.channel)
        writer.name("like")
        nullableLikeInteractionAdapter.toJson(writer, value.like)
        writer.name("rent")
        nullableRentInteractionAdapter.toJson(writer, value.rent)
        writer.name("report")
        nullableBasicInteractionAdapter.toJson(writer, value.report)
        writer.name("subscribe")
        nullableSubscriptionInteractionAdapter.toJson(writer, value.subscription)
        writer.name("watchlater")
        nullableWatchLaterInteractionAdapter.toJson(writer, value.watchLater)
        writer.endObject()
    }
}

// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import java.util.Date
import kotlin.Boolean
import kotlin.String
import kotlin.collections.List

class GroupFollowInteractionJsonAdapter(moshi: Moshi) : JsonAdapter<GroupFollowInteraction>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("added", "added_time", "options", "uri", "title", "type")

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter<Boolean?>(Boolean::class.javaObjectType, kotlin.collections.emptySet(), "added")

    private val nullableDateAdapter: JsonAdapter<Date?> =
            moshi.adapter<Date?>(Date::class.java, kotlin.collections.emptySet(), "addedTime")

    private val nullableListOfStringAdapter: JsonAdapter<List<String>?> =
            moshi.adapter<List<String>?>(Types.newParameterizedType(List::class.java, String::class.java), kotlin.collections.emptySet(), "options")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "uri")

    override fun toString(): String = "GeneratedJsonAdapter(GroupFollowInteraction)"

    override fun fromJson(reader: JsonReader): GroupFollowInteraction {
        var added: Boolean? = null
        var addedSet: Boolean = false
        var addedTime: Date? = null
        var addedTimeSet: Boolean = false
        var options_: List<String>? = null
        var optionsSet: Boolean = false
        var uri: String? = null
        var uriSet: Boolean = false
        var title: String? = null
        var titleSet: Boolean = false
        var rawType: String? = null
        var rawTypeSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    added = nullableBooleanAdapter.fromJson(reader)
                    addedSet = true
                }
                1 ->  {
                    addedTime = nullableDateAdapter.fromJson(reader)
                    addedTimeSet = true
                }
                2 ->  {
                    options_ = nullableListOfStringAdapter.fromJson(reader)
                    optionsSet = true
                }
                3 ->  {
                    uri = nullableStringAdapter.fromJson(reader)
                    uriSet = true
                }
                4 ->  {
                    title = nullableStringAdapter.fromJson(reader)
                    titleSet = true
                }
                5 ->  {
                    rawType = nullableStringAdapter.fromJson(reader)
                    rawTypeSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = GroupFollowInteraction()
        result = result.copy(
                added = if (addedSet) added else result.added,
                addedTime = if (addedTimeSet) addedTime else result.addedTime,
                options = if (optionsSet) options_ else result.options,
                uri = if (uriSet) uri else result.uri,
                title = if (titleSet) title else result.title,
                rawType = if (rawTypeSet) rawType else result.rawType)
        return result
    }

    override fun toJson(writer: JsonWriter, value: GroupFollowInteraction?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("added")
        nullableBooleanAdapter.toJson(writer, value.added)
        writer.name("added_time")
        nullableDateAdapter.toJson(writer, value.addedTime)
        writer.name("options")
        nullableListOfStringAdapter.toJson(writer, value.options)
        writer.name("uri")
        nullableStringAdapter.toJson(writer, value.uri)
        writer.name("title")
        nullableStringAdapter.toJson(writer, value.title)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.rawType)
        writer.endObject()
    }
}

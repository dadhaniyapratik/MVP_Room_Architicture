// Code generated by moshi-kotlin-codegen. Do not edit.
package com.vimeo.networking2

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String

class SpatialJsonAdapter(moshi: Moshi) : JsonAdapter<Spatial>() {
    private val options: JsonReader.Options = JsonReader.Options.of("projection", "stereo_format")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "spatialProjection")

    override fun toString(): String = "GeneratedJsonAdapter(Spatial)"

    override fun fromJson(reader: JsonReader): Spatial {
        var spatialProjection: String? = null
        var spatialProjectionSet: Boolean = false
        var stereoFormat: String? = null
        var stereoFormatSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    spatialProjection = nullableStringAdapter.fromJson(reader)
                    spatialProjectionSet = true
                }
                1 ->  {
                    stereoFormat = nullableStringAdapter.fromJson(reader)
                    stereoFormatSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Spatial()
        result = result.copy(
                spatialProjection = if (spatialProjectionSet) spatialProjection else result.spatialProjection,
                stereoFormat = if (stereoFormatSet) stereoFormat else result.stereoFormat)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Spatial?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("projection")
        nullableStringAdapter.toJson(writer, value.spatialProjection)
        writer.name("stereo_format")
        nullableStringAdapter.toJson(writer, value.stereoFormat)
        writer.endObject()
    }
}
